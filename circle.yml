general:
    branches:
        ignore:
            - gh-pages

    artifacts:
        - build

machine:
    environment:
        PHP_VERSIONS: 5.5.21, 5.6.14
    php:
        version: 5.6.14
    post:
        - |
            IFS=', ' read -r -a PHP_VERSIONS <<< "$PHP_VERSIONS"
            echo "export PHP_VERSIONS=(${PHP_VERSIONS[@]})" >> .circlerc

dependencies:
    pre:
        - nvm alias default node
        - npm config set progress false
        - npm install -g npm
        - sudo composer self-update
        - composer global require --prefer-source --no-interaction hirak/prestissimo

    override:
        - npm install
        - |
            for PHP_VERSION in "${PHP_VERSIONS[@]}"; do
                phpenv global "$PHP_VERSION"
                composer install --prefer-source --no-interaction
                rm -rf composer.lock
                mv vendor "/tmp/vendor.$PHP_VERSION"
            done

    cache_directories:
        - node_modules
        - "~/.composer/cache/files"

test:
    pre:
        - |
            for PHP_VERSION in "${PHP_VERSIONS[@]}"; do
                phpenv global "$PHP_VERSION"
                sed -i 's/^;//' "$HOME/.phpenv/versions/$(phpenv global)/etc/conf.d/xdebug.ini"
            done

    override:
        - npm run-script lint-ci
        - |
            for PHP_VERSION in "${PHP_VERSIONS[@]}"; do
                rm -rf "vendor"
                rm -rf "build"
                phpenv global "$PHP_VERSION"
                cp -rf "/tmp/vendor.$PHP_VERSION" vendor
                composer run-script test-ci
            done

deployment:
    gh-pages:
        branch: master
        commands:
            - vendor/bin/coveralls --verbose
            - |
                if [ -z "$CIRCLE_PULL_REQUEST" ]; then
                    REPOSITORY=${REPOSITORY:-"git@github.com:$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git"}
                    BRANCH=${BRANCH:-"gh-pages"}
                    APIGEN_BUILD_PATH=${APIGEN_BUILD_PATH:-"/tmp/apigen"}
                    GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME:-"CircleCI"}
                    GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL:-"circleci@circleci.com"}
                    git clone --branch "$BRANCH" --depth 1 "$REPOSITORY" "$APIGEN_BUILD_PATH"
                    yes | vendor/bin/apigen generate -d "$APIGEN_BUILD_PATH"
                    cd "$APIGEN_BUILD_PATH" || exit 1
                    git config user.name "$GIT_AUTHOR_NAME"
                    git config user.email "$GIT_AUTHOR_EMAIL"
                    git add -A
                    git commit -m 'docs: generate API documentation'
                    git push origin "$BRANCH"
                fi

    all:
        branch: /.*/
        commands:
            - vendor/bin/coveralls --verbose
